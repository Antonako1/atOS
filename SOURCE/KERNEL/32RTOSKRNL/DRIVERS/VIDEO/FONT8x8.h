#ifndef FONT8x8_H
#define FONT8x8_H
#include "../../../../STD/TYPEDEF.h"
#include "./VBE.h"
/*
8x8 characters

0b11111110
0b11111110
0b11111110
0b11111110
0b11111110
0b11111110
0b11111110
0b00000000

Right is left empty
Bottom is left empty

Most are borrowed from https://gist.github.com/rothwerx/700f275d078b3483509f
*/
#define INVISIBLE_CHARACTER {0, 0, 0, 0, 0, 0, 0, 0}
#define CHARACTER(...) { __VA_ARGS__ }
VBE_LETTERS_TYPE VBE_LETTERS[VBE_MAX_CHARS][VBE_CHAR_HEIGHT] = {
    CHARACTER(
        0b00110000,
        0b01111000,
        0b01111000,
        0b00110000,
        0b00110000,
        0b00000000,
        0b00110000,
        0b00000000,
    ), // !
    CHARACTER(
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ), // TODO: " 
    CHARACTER(
        0b01101100,
        0b01101100,
        0b11111110,
        0b01101100,
        0b11111110,
        0b01101100,
        0b01101100,
        0b00000000,
    ), // #
    CHARACTER(
        0b00110000,
        0b01111100,
        0b11000000,
        0b01111000,
        0b00001100,
        0b11111000,
        0b00110000,
        0b00000000,
    ), // $
    CHARACTER(
        0b00000000,
        0b11000110,
        0b11001100,
        0b00011000,
        0b00110000,
        0b01100110,
        0b11000110,
        0b00000000,
    ), // %
    CHARACTER(
        0b00111000,
        0b01101100,
        0b00111000,
        0b01110110,
        0b11011100,
        0b11001100,
        0b01110110,
        0b00000000,
    ), // &
    CHARACTER(
        0b00111000,
        0b00010000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ), // '
    CHARACTER(
        0b00111000,
        0b01100000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01100000,
        0b00111000,
        0b00000000,
    ), // (
    CHARACTER(
        0b01110000,
        0b00011000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00011000,
        0b01110000,
        0b00000000,
    ), // )
    CHARACTER(
        0b00000000,
        0b00101010,
        0b00011100,
        0b00111110,
        0b00011100,
        0b00101010,
        0b00000000,
        0b00000000,
    ), // *
    CHARACTER(
        0b00000000,
        0b00010000,
        0b00010000,
        0b01111100,
        0b00010000,
        0b00010000,
        0b00000000,
        0b00000000,
    ), // +
    CHARACTER(
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b01100000,
        0b11000000,
        0b00000000,

    ), // ,
    CHARACTER(
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b11111100,
        0b00000000,
        0b00000000,
        0b00000000,
    ), // -
    CHARACTER(
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b01100000,
        0b01100000,
        0b00000000,

    ), // .
    CHARACTER(
        0b00000110,
        0b00001100,
        0b00011000,
        0b00110000,
        0b01100000,
        0b11000000,
        0b10000000,
        0b00000000,

    ), // /   
    CHARACTER(
        0b01111000,
        0b11001100,
        0b11011100,
        0b11111100,
        0b11101100,
        0b11001100,
        0b01111100,
        0b00000000,
    ), // 0
    CHARACTER(
        0b00110000,
        0b01110000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b11111100,
        0b00000000,
    ), // 1
    CHARACTER(
        0b01111000,
        0b11001100,
        0b00001100,
        0b00111000,
        0b01100000,
        0b11001100,
        0b11111100,
        0b00000000,
    ), // 2
    CHARACTER(
        0b01111000,
        0b11001100,
        0b00001100,
        0b00111000,
        0b00001100,
        0b11001100,
        0b01111000,
        0b00000000,
    ), // 3
    CHARACTER(
        0b00011100,
        0b00111100,
        0b01101100,
        0b11001100,
        0b11111110,
        0b00001100,
        0b00011110,
        0b00000000,
    ), // 4
    CHARACTER(
        0b11111100,
        0b11000000,
        0b11111000,
        0b00001100,
        0b00001100,
        0b11001100,
        0b01111000,
        0b00000000,
    ), // 5
    CHARACTER(
        0b00111000,
        0b01100000,
        0b11000000,
        0b11111000,
        0b11001100,
        0b11001100,
        0b01111000,
        0b00000000,
    ), // 6
    CHARACTER(
        0b11111100,
        0b11001100,
        0b00001100,
        0b00011000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b00000000,
    ), // 7
    CHARACTER(
        0b01111000,
        0b11001100,
        0b11001100,
        0b01111000,
        0b11001100,
        0b11001100,
        0b01111000,
        0b00000000,
    ), // 8
    CHARACTER(
        0b01111000,
        0b11001100,
        0b11001100,
        0b01111100,
        0b00001100,
        0b00011000,
        0b01110000,
        0b00000000,
    ), // 9
    CHARACTER(
        0b00110000,
        0b00110000,
        0b00110000,
        0b00000000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b00000000,
    ), // :
    CHARACTER(
        0b00110000,
        0b00110000,
        0b00110000,
        0b00000000,
        0b00110000,
        0b00110000,
        0b01100000,
        0b00000000,
    ), // ;
    CHARACTER(
        0b00000000,
        0b00001110,
        0b00111000,
        0b01110000,
        0b11100000,
        0b00111000,
        0b00001110,
        0b00000000,
    ), // <
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11111100,
        0b00000000,
        0b11111100,
        0b00000000,
        0b00000000,
        0b00000000,
    ), // =
    CHARACTER(
        0b00000000,
        0b11100000,
        0b00111000,
        0b00011100,
        0b00001110,
        0b00111000,
        0b11100000,
        0b00000000,
    ), // >
    CHARACTER(
        0b01111000,
        0b11001100,
        0b00001100,
        0b00011000,
        0b00110000,
        0b00000000,
        0b00110000,
        0b00000000,
    ), //?
    CHARACTER(
        0b00111100,
        0b01100010,
        0b11001110,
        0b11011010,
        0b11010010,
        0b11011110,
        0b01100110,
        0b00000000,
    ), // @
    CHARACTER(
        0b00110000,
        0b01111000,
        0b11001100,
        0b11001100,
        0b11111100,
        0b11001100,
        0b11001100,
        0b00000000,
    ), // A
    CHARACTER(
        0b11111100,
        0b01100110,
        0b01100110,
        0b01111100,
        0b01100110,
        0b01100110,
        0b11111100,
        0b00000000,
    ), // B
    CHARACTER(
        0b00111100,
        0b01100110,
        0b11000000,
        0b11000000,
        0b11000000,
        0b01100110,
        0b00111100,
        0b00000000,
    ), // C
    CHARACTER(
        0b11111000,
        0b01101100,
        0b01100110,
        0b01100110,
        0b01100110,
        0b01101100,
        0b11111000,
        0b00000000,
    ), // D
    CHARACTER(
        0b11111110,
        0b01100010,
        0b01101000,
        0b01111000,
        0b01101000,
        0b01100010,
        0b11111110,
        0b00000000,
    ), // E
    CHARACTER(
        0b11111110,
        0b01100010,
        0b01101000,
        0b01111000,
        0b01101000,
        0b01100000,
        0b11110000,
        0b00000000,
    ), // F
    CHARACTER(
        0b00111100,
        0b01100110,
        0b11000000,
        0b11000000,
        0b11001110,
        0b01100110,
        0b00111110,
        0b00000000,
    ), // G
    CHARACTER(
        0b11001100,
        0b11001100,
        0b11001100,
        0b11111100,
        0b11001100,
        0b11001100,
        0b11001100,
        0b00000000,
    ), // H
    CHARACTER(
        0b01111000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b01111000,
        0b00000000,
    ), // I
    CHARACTER(
        0b00011110,
        0b00001100,
        0b00001100,
        0b00001100,
        0b11001100,
        0b11001100,
        0b01111000,
        0b00000000,
    ), // J
    CHARACTER(
        0b11110110,
        0b01100110,
        0b01101100,
        0b01111000,
        0b01101100,
        0b01100110,
        0b11110110,
        0b00000000,
    ), // K
    CHARACTER(
        0b11110000,
        0b01100000,
        0b01100000,
        0b01100000,
        0b01100010,
        0b01100110,
        0b11111110,
        0b00000000,
    ), // L
    CHARACTER(
        0b11000110,
        0b11101110,
        0b11111110,
        0b11111110,
        0b11010110,
        0b11000110,
        0b11000110,
        0b00000000,
    ), // M
    CHARACTER(
        0b11000110,
        0b11100110,
        0b11110110,
        0b11011110,
        0b11001110,
        0b11000110,
        0b11000110,
        0b00000000,
    ), // N
    CHARACTER(
        0b00111000,
        0b01101100,
        0b11000110,
        0b11000110,
        0b11000110,
        0b01101100,
        0b00111000,
        0b00000000,
    ), // O
    CHARACTER(
        0b11111100,
        0b01100110,
        0b01100110,
        0b01111100,
        0b01100000,
        0b01100000,
        0b11110000,
        0b00000000,
    ), // P
    CHARACTER(
        0b01111000,
        0b11001100,
        0b11001100,
        0b11001100,
        0b11011100,
        0b01111000,
        0b00011100,
        0b00000000,
    ), // Q
    CHARACTER(
        0b11111100,
        0b01100110,
        0b01100110,
        0b01111100,
        0b01101100,
        0b01100110,
        0b11110110,
        0b00000000,
    ), // R
    CHARACTER(
        0b01111000,
        0b11001100,
        0b11100000,
        0b01110000,
        0b00011100,
        0b11001100,
        0b01111000,
        0b00000000,
    ), // S
    CHARACTER(
        0b11111100,
        0b10110100,
        0b00110000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b01111000,
        0b00000000,
    ), // T
    CHARACTER(
        0b11001100,
        0b11001100,
        0b11001100,
        0b11001100,
        0b11001100,
        0b11001100,
        0b11111100,
        0b00000000,
    ), // U
    CHARACTER(
        0b11001100,
        0b11001100,
        0b11001100,
        0b11001100,
        0b11001100,
        0b01111000,
        0b00110000,
        0b00000000,
    ), // V
    CHARACTER(
        0b11000110,
        0b11000110,
        0b11000110,
        0b11010110,
        0b11111110,
        0b11101110,
        0b11000110,
        0b00000000,
    ), // W
    CHARACTER(
        0b11000110,
        0b11000110,
        0b01101100,
        0b00111000,
        0b00111000,
        0b01101100,
        0b11000110,
        0b00000000,
    ), // X
    CHARACTER(
        0b11001100,
        0b11001100,
        0b11001100,
        0b01111000,
        0b00110000,
        0b00110000,
        0b01111000,
        0b00000000,
    ), // Y
    CHARACTER(
        0b11111110,
        0b11000110,
        0b10001100,
        0b00011000,
        0b00110010,
        0b01100110,
        0b11111110,
        0b00000000,
    ), // Z
    CHARACTER(
        0b01111000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01000000,
        0b01111000,
        0b00000000,
    ), // [
    CHARACTER(
        0b10000000,
        0b11000000,
        0b01100000,
        0b00110000,
        0b00011000,
        0b00001100,
        0b00000110,
        0b00000000,
    ), // \ 

    CHARACTER(
        0b01111000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b00001000,
        0b01111000,
        0b00000000,
    ), // ]
    CHARACTER(
        0b00110000,
        0b01111000,
        0b11001100,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ), // ^
    CHARACTER(
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b11111100,
        0b00000000,
    ), // _
    CHARACTER(
        0b11100000,
        0b00110000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ), // `
    CHARACTER(
        0b00000000,
        0b00000000,
        0b01111000,
        0b00001100,
        0b01111100,
        0b11001100,
        0b01110110,
        0b00000000,
    ), // a
    CHARACTER(
        0b11100000,
        0b01100000,
        0b01100000,
        0b01111100,
        0b01100110,
        0b01100110,
        0b11011100,
        0b00000000,
    ), // b
    CHARACTER(
        0b00000000,
        0b00000000,
        0b01111000,
        0b11001100,
        0b11000000,
        0b11001100,
        0b01111000,
        0b00000000,
    ), // c
    CHARACTER(
        0b00011100,
        0b00001100,
        0b00001100,
        0b01111100,
        0b11001100,
        0b11001100,
        0b01110110,
        0b00000000,
    ), // d
    CHARACTER(
        0b00000000,
        0b00000000,
        0b01111000,
        0b11001100,
        0b11111100,
        0b11000000,
        0b01111000,
        0b00000000,
    ), // e
    CHARACTER(
        0b00111000,
        0b01101100,
        0b01100000,
        0b11110000,
        0b01100000,
        0b01100000,
        0b11110000,
        0b00000000,
    ), // f
    CHARACTER(
        0b00000000,
        0b00000000,
        0b01110110,
        0b11001100,
        0b11001100,
        0b01111100,
        0b00001100,
        0b11111000,
    ), // g
    CHARACTER(
        0b11100000,
        0b01100000,
        0b01101100,
        0b01110110,
        0b01100110,
        0b01100110,
        0b11100110,
        0b00000000,
    ), // h
    CHARACTER(
        0b00110000,
        0b00000000,
        0b01110000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b01111000,
        0b00000000,
    ), // i
    CHARACTER(
        0b00001100,
        0b00000000,
        0b00001100,
        0b00001100,
        0b00001100,
        0b11001100,
        0b11001100,
        0b01111000,
    ), // j
    CHARACTER(
        0b11100000,
        0b01100000,
        0b01100110,
        0b01101100,
        0b01111000,
        0b01101100,
        0b11100110,
        0b00000000,
    ), // k
    CHARACTER(
        0b01110000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b00110000,
        0b01111000,
        0b00000000,
    ), // l
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11001100,
        0b11111110,
        0b11111110,
        0b11010110,
        0b11000110,
        0b00000000,
    ), // m
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11111000,
        0b11001100,
        0b11001100,
        0b11001100,
        0b11001100,
        0b00000000,
    ), // n
    CHARACTER(
        0b00000000,
        0b00000000,
        0b01111000,
        0b11001100,
        0b11001100,
        0b11001100,
        0b01111000,
        0b00000000,
    ), // o
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11011100,
        0b01100110,
        0b01100110,
        0b01111100,
        0b01100000,
        0b11110000,
    ), // p
    CHARACTER(
        0b00000000,
        0b00000000,
        0b01110110,
        0b11001100,
        0b11001100,
        0b01111100,
        0b00001100,
        0b00011110,
    ), // q
    CHARACTER(
        0b00000000,
        0b00000000,
        0b10011100,
        0b01110110,
        0b01100110,
        0b01100000,
        0b11110000,
        0b00000000,
    ), // r
    CHARACTER(
        0b00000000,
        0b00000000,
        0b01111100,
        0b11000000,
        0b01111000,
        0b00001100,
        0b11111000,
        0b00000000,
    ), // s
    CHARACTER(
        0b00010000,
        0b00110000,
        0b01111100,
        0b00110000,
        0b00110000,
        0b00110100,
        0b00011000,
        0b00000000,
    ), // t
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11001100,
        0b11001100,
        0b11001100,
        0b11001100,
        0b01110110,
        0b00000000,
    ), // u
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11001100,
        0b11001100,
        0b11001100,
        0b01111000,
        0b00110000,
        0b00000000,
    ), // v
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11000110,
        0b11000110,
        0b11010110,
        0b11111110,
        0b01101100,
        0b00000000,
    ), // w
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11000110,
        0b01101100,
        0b00111000,
        0b01101100,
        0b11000110,
        0b00000000,
    ), // x
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11001100,
        0b11001100,
        0b11001100,
        0b01111100,
        0b00001100,
        0b11111000,
    ), // y
    CHARACTER(
        0b00000000,
        0b00000000,
        0b11111100,
        0b10011000,
        0b00110000,
        0b01100100,
        0b11111100,
        0b00000000,
    ), // z
    CHARACTER(
        0b00001110,
        0b00011000,
        0b00011000,
        0b01100000,
        0b00011000,
        0b00011000,
        0b00001110,
        0b00000000,
    ), // {
    CHARACTER(
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00010000,
        0b00000000,
    ), // |
    CHARACTER(
        0b01110000,
        0b00011000,
        0b00011000,
        0b00000110,
        0b00011000,
        0b00011000,
        0b01110000,
        0b00000000,
    ), // }
    CHARACTER(
        0b00000000,
        0b01110110,
        0b11011100,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
        0b00000000,
    ), // ~
};

#endif // FONT8x8_H